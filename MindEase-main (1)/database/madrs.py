# -*- coding: utf-8 -*-
"""MADRS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18eOS_Z68t5tzfLka70J_XmFhfG26_s9v

Using MADRS score (Montgomery–Åsberg Depression Rating Scale (MADRS) to use ML for depression states classification via score prediction based on activity data

The Montgomery–Åsberg Depression Rating Scale (MADRS) is a ten-item[1] diagnostic questionnaire which psychiatrists use to measure the severity of depressive episodes in patients with mood disorders

MADRS interpretation
- 0 to 6: normal range (no depression),
- 7 to 19 : mild depression
- 20 to 34: moderate depression
- 35 and greater: severe depression
- 60 or greater: “very severe depression
"""

import numpy as np
import pandas as pd
import os
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings("ignore")
from sklearn import preprocessing
from sklearn.model_selection import train_test_split

df = pd.read_csv('/content/MADRS.csv')
print(df)

df.info()
#seemran/depression-analysis-score

df["delta"]= df.madrs2-df.madrs1
df.head()

df.edu = df['edu'].replace(' ', np.NaN)
df

# categorizing scores
df.age = df.age.astype('category')
df.gender = df.gender.astype('category')
df.edu = df.edu.astype('category')
df.afftype = df.afftype.astype('category')
df.melanch = df.melanch.astype('category')
df.inpatient = df.inpatient.astype('category')
df.marriage = df.marriage.astype('category')
df.work = df.work.astype('category')
df.info()
df.head()

df.gender = df['gender'].cat.rename_categories({1.0 : 'female',2.0:'male'})
df.afftype = df['afftype'].cat.rename_categories({1.0 : 'bipolar II',2.0:'unipolar', 3: 'bipolar I'})
df.melanch = df['melanch'].cat.rename_categories({1.0 : 'melancholia',2.0:'No melancholia'})
df.inpatient = df['inpatient'].cat.rename_categories({1.0 : 'inpatient',2.0:'outpatient'})
df.marriage = df['marriage'].cat.rename_categories({1.0 : 'married/cohabitating',2.0:'single'})
df.work = df['work'].cat.rename_categories({1.0 : 'Work/Study',2.0:'Unemployed/Sick leave/Pension'})
df

df_condition = df[df.number.str.contains('condition')].copy()
df_condition.info()

df_control = df[df.number.str.contains('control')].copy()
df_control.info()

# encoding features
features_num = ['days','madrs1','madrs2','DeltaMADRS']
features_cat = ['age', 'gender', 'afftype', 'melanch', 'inpatient', 'edu', 'marriage', 'work']

# barplot of MADRS scores (before/after)
temp_plot_paras = plt.rcParams['figure.figsize']

plt.rcParams['figure.figsize'] = (14,4)
df_condition.plot(x='number', y=['madrs1','madrs2'], kind='bar', color = ['green','orange'])
plt.title('MADRS Development')
plt.grid()
plt.show()

plt.rcParams['figure.figsize'] = temp_plot_paras

for f in features_cat:
    df_condition[f].value_counts().sort_index().plot(kind='bar')
    plt.title(f)
    plt.grid()
    plt.show()

for f in features_cat:
    plt.figure(figsize=(10,4))
    sns.violinplot(data=df_condition, x=f, y='delta')
    plt.title('Change in MADRS1-2 vs ' + f)
    plt.grid()
    plt.show()